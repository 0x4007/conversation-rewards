name: Compute Rewards

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
#      issueUrl:
#        description: "The URL of the issue needing to be parsed"
#        required: true
#      evmNetworkId:
#        description: "The EVM network ID to use"
#        required: true
#      evmPrivateEncrypted:
#        description: "The encrypted EVM private key"
#        required: true
      stateId:
        description: ""
      eventName:
        description: ""
      eventPayload:
        description: ""
      settings:
        description: ""
      authToken:
        description: ""
      ref:
        description: ""

jobs:
  test:
    name: Run Local Tests
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.10.0"

      - run:
          echo ${{ github }}
          echo "---"
          echo "${{ inputs.settings }}"
          echo "-------"
          echo "${{ toJson(inputs.settings) }}"
          echo "-------"
          echo "${{ toJson(inputs.settings).evmNetworkId }}"
          echo "-------"
          echo ${{ inputs.settings.evmNetworkId }}
          echo "-------"
          echo ${{ inputs.settings['evmNetworkId'] }}
          echo "-------"
          echo ${{ inputs.eventPayload }}

      - name: Generate Rewards
        uses: ./
        with:
          issueUrl: ${{ inputs.eventPayload.issue.url }}
          evmPrivateEncrypted: ${{ secrets.EVM_PRIVATE_ENCRYPTED }}
          evmNetworkId: ${{ inputs.settings.evmNetworkId }}
